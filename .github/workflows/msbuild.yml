name: MSBuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Zip the binary file
      run: |
        $currentDir=$(($pwd).Path)
        mkdir msbuild
        Get-ChildItem -Path .\*.exe -Recurse -Force | Copy-Item -Destination $(Join-Path $currentDir 'msbuild') -ErrorAction Ignore
        Compress-Archive -Path $(Join-Path $currentDir msbuild) -DestinationPath $(Join-Path $currentDir 'msbuild.zip')
        Remove-Item $(Join-Path $currentDir msbuild) -Filter * -Recurse -ErrorAction Ignore
        
    - name: Create releas
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        tag_name: v${{ github.run_number }}
        release_name:  Release V${{ github.run_number }}  
    
    - name: Upload to release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msbuild.zip'
        asset_name: msbuild-v${{ github.run_number }}.zip
        asset_content_type: application/zip
 
        
